{"version":3,"sources":["components/Button/index.jsx","components/Block/index.jsx","components/Dialog/index.jsx","components/Message/index.jsx","components/MessageInput/index.jsx","components/DialogsList/index.jsx","pages/Auth/index.jsx","pages/Register/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["Button","text","className","size","type","classNames","button__large","Block","children","Dialog","activeDialog","dialogsList","newMessage","messagesRef","useRef","console","log","useEffect","current","scrollTop","scrollHeight","sender","ref","messages","map","message","index","from","key","isMe","myNick","Message","MessageInput","useState","emojiPicker","setEmojiPicker","input","setInput","set","showSkinTones","showPreview","onSelect","emoji","native","multiple","placeholder","onChange","e","target","value","prefix","shape","icon","SmileOutlined","onClick","suffix","AudioOutlined","SendOutlined","DialogsList","chooseDialog","searchInput","setSearchInput","TeamOutlined","SearchOutlined","dialog","data-id","currentTarget","dataset","id","charAt","length","Auth","name","initialValues","remember","onFinish","Item","rules","required","UserOutlined","LockOutlined","to","href","Register","MailOutlined","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","Home","setActiveDialog","dialogsListJson","setDialogsList","dialogIndex","newDialogsList","slice","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28bea300.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button as ButtonUI } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ text, className, size, type }) => {\r\n  return (\r\n    <ButtonUI\r\n      type={type}\r\n      size={size}\r\n      className={classNames(\"button\", className, {\r\n        button__large: size === \"large\"\r\n      })}\r\n    >\r\n      {text}\r\n    </ButtonUI>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children }) => {\r\n  return <div className=\"block\">{children}</div>;\r\n};\r\n\r\nexport default Block;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Message, MessageInput } from \"../../components\";\r\n\r\nimport \"./Dialog.scss\";\r\n\r\nconst Dialog = ({ activeDialog, dialogsList, newMessage }) => {\r\n  const myNick = \"nagibator\";\r\n\r\n  const messagesRef = useRef(null);\r\n  if (dialogsList) {\r\n    console.log(dialogsList);\r\n  }\r\n  useEffect(() => {\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"dialog\">\r\n      {activeDialog ? (\r\n        <>\r\n          <div className=\"dialog__name\">\r\n            <div className=\"dialog__name-text\">\r\n              {dialogsList.sender && dialogsList.sender}\r\n            </div>\r\n          </div>\r\n          <div className=\"dialog__messages\" ref={messagesRef}>\r\n            {dialogsList &&\r\n              dialogsList.messages.map((message, index) => {\r\n                return message.from === myNick ? (\r\n                  <Message key={index} message={message} isMe />\r\n                ) : (\r\n                  <Message key={index} message={message} />\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          <MessageInput\r\n            newMessage={newMessage}\r\n            activeDialog={activeDialog}\r\n            myNick={myNick}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"Выберите диалог\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Message.scss\";\r\n\r\nconst Message = ({ message, isMe }) => {\r\n  return isMe ? (\r\n    <div className=\"message-from-me\">\r\n      <div className={classNames(\"message message-from-me__content\")}>\r\n        <div className=\"message-from-me__text\">{message.message}</div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"message-to-me\">\r\n      <div className={classNames(\"message message-to-me__content\")}>\r\n        <div className=\"message-to-me__text\">{message.message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport { SendOutlined, AudioOutlined, SmileOutlined } from \"@ant-design/icons\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport \"./MessageInput.scss\";\r\n\r\nconst MessageInput = ({ newMessage, activeDialog, myNick }) => {\r\n  const [emojiPicker, setEmojiPicker] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"dialog__message-input\">\r\n      {emojiPicker && (\r\n        <Picker\r\n          set=\"apple\"\r\n          showSkinTones={false}\r\n          showPreview={false}\r\n          onSelect={emoji => {\r\n            setInput(input + emoji.native);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <Input\r\n        multiple\r\n        size=\"large\"\r\n        placeholder=\"Введите текст сообщения…\"\r\n        onChange={e => {\r\n          setInput(e.target.value);\r\n        }}\r\n        value={input}\r\n        prefix={\r\n          <Button\r\n            shape=\"circle\"\r\n            icon={<SmileOutlined />}\r\n            className=\"input-button\"\r\n            onClick={() => setEmojiPicker(!emojiPicker)}\r\n          />\r\n        }\r\n        suffix={\r\n          <div className=\"input__buttons\">\r\n            <Button\r\n              shape=\"circle\"\r\n              icon={<AudioOutlined />}\r\n              className=\"input-button\"\r\n            />\r\n            <Button\r\n              shape=\"circle\"\r\n              icon={<SendOutlined />}\r\n              className=\"input-button\"\r\n              onClick={() => {\r\n                newMessage(activeDialog, myNick, input);\r\n                setInput(\"\");\r\n              }}\r\n            />\r\n          </div>\r\n        }\r\n      ></Input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { SearchOutlined, TeamOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./DialogsList.scss\";\r\n\r\nconst DialogsList = ({ dialogsList, chooseDialog }) => {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"dialogs-list\">\r\n      <div className=\"dialogs-list__title\">\r\n        <TeamOutlined />\r\n        <div className=\"dialogs-list__title-text\">Список диалогов</div>\r\n      </div>\r\n      <div className=\"dialogs-list__search\">\r\n        <Input\r\n          size=\"middle\"\r\n          placeholder=\"Поиск среди контактов\"\r\n          onChange={e => {\r\n            setSearchInput(e.target.value);\r\n          }}\r\n          value={searchInput}\r\n          prefix={<SearchOutlined />}\r\n        />\r\n      </div>\r\n      {dialogsList && (\r\n        <div className=\"dialogs-list__elements\">\r\n          {dialogsList.map((dialog, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"dialog-element\"\r\n                data-id={index}\r\n                onClick={e => {\r\n                  chooseDialog(e.currentTarget.dataset.id);\r\n                  console.log(e.currentTarget.dataset.id);\r\n                }}\r\n              >\r\n                <div className=\"dialog-element__avatar\">\r\n                  <div className=\"dialog-element__avatar-letter\">\r\n                    {dialog.sender.charAt(0)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"dialog-element__wrap\">\r\n                  <div className=\"dialog-element__name\">{dialog.sender}</div>\r\n                  <div className=\"dialog-element__message\">\r\n                    {dialog.messages[dialog.messages.length - 1].message}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsList;\r\n","import React from \"react\";\r\nimport { Button, Block } from \"../../components\";\r\nimport { Form, Input } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <div className=\"auth\">\r\n      <h1 className=\"title\">Войти в аккаунт</h1>\r\n      <p className=\"text\">Пожалуйста, войдите в свой аккаунт</p>\r\n      <Block>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" size=\"large\" text=\"Войти в аккаунт\" />\r\n          </Form.Item>\r\n          <Form.Item className=\"auth__reg-link-wrap\">\r\n            <Link to=\"/register\">\r\n              <a className=\"auth__reg-link\" href=\"register\">\r\n                Зарегистрироваться\r\n              </a>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Button, Block } from \"../../components\";\r\nimport { Form, Input } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Register.scss\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div className=\"auth\">\r\n      <h1 className=\"title\">Зарегистрироваться</h1>\r\n      <p className=\"text\">Для входа в чат, необходима регистрация</p>\r\n      <Block>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\"\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n              size=\"large\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            hasFeedback\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input.Password\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    \"The two passwords that you entered do not match!\"\r\n                  );\r\n                }\r\n              })\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              size=\"large\"\r\n              placeholder=\"Confirm Password\"\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" size=\"large\" text=\"Зарегистрироваться\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item className=\"auth__reg-link-wrap\">\r\n            <Link to=\"/login\">\r\n              <a className=\"auth__reg-link\" href=\"register\">\r\n                Войти в аккаунт\r\n              </a>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Dialog, DialogsList } from \"../../components\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nimport dialogsListJson from \"./dialogs.json\";\r\n\r\nconst Home = () => {\r\n  const [activeDialog, setActiveDialog] = useState();\r\n  const [dialogsList, setDialogsList] = useState(dialogsListJson);\r\n\r\n  const newMessage = (dialogIndex, from, message) => {\r\n    const newDialogsList = dialogsList.slice();\r\n    newDialogsList[dialogIndex].messages = [\r\n      ...newDialogsList[dialogIndex].messages,\r\n      { from: from, message: message }\r\n    ];\r\n\r\n    setDialogsList(newDialogsList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <DialogsList dialogsList={dialogsList} chooseDialog={setActiveDialog} />\r\n      <Dialog\r\n        activeDialog={activeDialog}\r\n        dialogsList={dialogsList[activeDialog]}\r\n        newMessage={newMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Auth, Register, Home } from \"./pages\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Route exact path={[\"/\", \"/login\"]} component={Auth} />\r\n      <Route exact path=\"/register\" component={Register} />\r\n      <Route exact path=\"/im\" component={Home} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}