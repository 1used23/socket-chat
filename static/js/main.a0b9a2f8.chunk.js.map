{"version":3,"sources":["components/Button/index.jsx","components/Block/index.jsx","Pages/Auth/index.jsx","Pages/Register/index.jsx","App.js","index.js"],"names":["Button","text","className","size","type","classNames","button__large","Block","children","Auth","name","initialValues","remember","onFinish","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","to","href","Register","MailOutlined","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b9a2f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button as ButtonUI } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ text, className, size, type }) => {\r\n  return (\r\n    <ButtonUI\r\n      type={type}\r\n      size={size}\r\n      className={classNames(\"button\", className, {\r\n        button__large: size === \"large\"\r\n      })}\r\n    >\r\n      {text}\r\n    </ButtonUI>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children }) => {\r\n  return <div className=\"block\">{children}</div>;\r\n};\r\n\r\nexport default Block;\r\n","import React from \"react\";\r\nimport { Button, Block } from \"../../components\";\r\nimport { Form, Input } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <div className=\"auth\">\r\n      <h1 className=\"title\">Войти в аккаунт</h1>\r\n      <p className=\"text\">Пожалуйста, войдите в свой аккаунт</p>\r\n      <Block>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" size=\"large\" text=\"Войти в аккаунт\" />\r\n          </Form.Item>\r\n          <Form.Item className=\"auth__reg-link-wrap\">\r\n            <Link to=\"/register\">\r\n              <a className=\"auth__reg-link\" href=\"register\">\r\n                Зарегистрироваться\r\n              </a>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Button, Block } from \"../../components\";\r\nimport { Form, Input } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Register.scss\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div className=\"auth\">\r\n      <h1 className=\"title\">Зарегистрироваться</h1>\r\n      <p className=\"text\">Для входа в чат, необходима регистрация</p>\r\n      <Block>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\"\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n              size=\"large\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            hasFeedback\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input.Password\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    \"The two passwords that you entered do not match!\"\r\n                  );\r\n                }\r\n              })\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              size=\"large\"\r\n              placeholder=\"Confirm Password\"\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" size=\"large\" text=\"Зарегистрироваться\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item className=\"auth__reg-link-wrap\">\r\n            <Link to=\"/login\">\r\n              <a className=\"auth__reg-link\" href=\"register\">\r\n                Войти в аккаунт\r\n              </a>\r\n            </Link>\r\n          </Form.Item>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Auth, Register } from \"./Pages\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Route exact path={[\"/\", \"/login\"]} component={Auth} />\r\n      <Route exact path=\"/register\" component={Register} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}